%!PS-Adobe-2.0 EPSF-2.0
%%Title: Patient6.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Wed Feb  7 15:52:15 2018
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (Patient6.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (Jeanne Ventre)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Feb  7 15:52:15 2018)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
1.000 UL
LTb
1220 640 M
63 0 V
5617 0 R
-63 0 V
stroke
1100 640 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 50)]
] -66.7 MRshow
1.000 UL
LTb
1220 1020 M
63 0 V
5617 0 R
-63 0 V
stroke
1100 1020 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 60)]
] -66.7 MRshow
1.000 UL
LTb
1220 1400 M
63 0 V
5617 0 R
-63 0 V
stroke
1100 1400 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 70)]
] -66.7 MRshow
1.000 UL
LTb
1220 1780 M
63 0 V
5617 0 R
-63 0 V
stroke
1100 1780 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 80)]
] -66.7 MRshow
1.000 UL
LTb
1220 2160 M
63 0 V
5617 0 R
-63 0 V
stroke
1100 2160 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 90)]
] -66.7 MRshow
1.000 UL
LTb
1220 2540 M
63 0 V
5617 0 R
-63 0 V
stroke
1100 2540 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 100)]
] -66.7 MRshow
1.000 UL
LTb
1220 2920 M
63 0 V
5617 0 R
-63 0 V
stroke
1100 2920 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 110)]
] -66.7 MRshow
1.000 UL
LTb
1220 3300 M
63 0 V
5617 0 R
-63 0 V
stroke
1100 3300 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 120)]
] -66.7 MRshow
1.000 UL
LTb
1220 3680 M
63 0 V
5617 0 R
-63 0 V
stroke
1100 3680 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 130)]
] -66.7 MRshow
1.000 UL
LTb
1220 4060 M
63 0 V
5617 0 R
-63 0 V
stroke
1100 4060 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 140)]
] -66.7 MRshow
1.000 UL
LTb
1220 4440 M
63 0 V
5617 0 R
-63 0 V
stroke
1100 4440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 150)]
] -66.7 MRshow
1.000 UL
LTb
1220 640 M
0 63 V
0 3737 R
0 -63 V
stroke
1220 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MCshow
1.000 UL
LTb
2031 640 M
0 63 V
0 3737 R
0 -63 V
stroke
2031 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.2)]
] -66.7 MCshow
1.000 UL
LTb
2843 640 M
0 63 V
0 3737 R
0 -63 V
stroke
2843 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.4)]
] -66.7 MCshow
1.000 UL
LTb
3654 640 M
0 63 V
0 3737 R
0 -63 V
stroke
3654 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.6)]
] -66.7 MCshow
1.000 UL
LTb
4466 640 M
0 63 V
0 3737 R
0 -63 V
stroke
4466 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.8)]
] -66.7 MCshow
1.000 UL
LTb
5277 640 M
0 63 V
0 3737 R
0 -63 V
stroke
5277 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 1)]
] -66.7 MCshow
1.000 UL
LTb
6089 640 M
0 63 V
0 3737 R
0 -63 V
stroke
6089 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 1.2)]
] -66.7 MCshow
1.000 UL
LTb
6900 640 M
0 63 V
0 3737 R
0 -63 V
stroke
6900 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 1.4)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
1220 4440 N
0 -3800 V
5680 0 V
0 3800 V
-5680 0 V
Z stroke
LCb setrgbcolor
400 2540 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true 0 (Pressure \(mmHg\))]
] -66.7 MCshow
grestore
LTb
LCb setrgbcolor
4060 140 M
[ [(Helvetica) 200.0 0.0 true true 0 (Time \(s\))]
] -66.7 MCshow
LTb
4060 4740 M
[ [(Helvetica) 200.0 0.0 true true 0 (Mean beat pressure over a cycle for Patient 6)]
] -66.7 MCshow
1.000 UP
1.000 UL
LTb
2.000 UP
1.000 UL
LT0
1.00 0.00 0.00 C LTb
5997 4277 M
[ [(Helvetica) 200.0 0.0 true true 0 (Pre Clamp )]
] -66.7 MRshow
LT0
1.00 0.00 0.00 C 1220 993 Pls
1261 1001 Pls
1301 1026 Pls
1342 1116 Pls
1382 1281 Pls
1423 1509 Pls
1463 1810 Pls
1504 2179 Pls
1545 2584 Pls
1585 2990 Pls
1626 3349 Pls
1666 3590 Pls
1707 3725 Pls
1747 3816 Pls
1788 3834 Pls
1829 3827 Pls
1869 3787 Pls
1910 3724 Pls
1950 3665 Pls
1991 3602 Pls
2031 3554 Pls
2072 3503 Pls
2113 3462 Pls
2153 3420 Pls
2194 3384 Pls
2234 3346 Pls
2275 3312 Pls
2315 3275 Pls
2356 3244 Pls
2397 3209 Pls
2437 3173 Pls
2478 3127 Pls
2518 3071 Pls
2559 2994 Pls
2599 2898 Pls
2640 2774 Pls
2681 2629 Pls
2721 2464 Pls
2762 2298 Pls
2802 2148 Pls
2843 2029 Pls
2883 1946 Pls
2924 1903 Pls
2965 1888 Pls
3005 1879 Pls
3046 1904 Pls
3086 1929 Pls
3127 1938 Pls
3167 1940 Pls
3208 1934 Pls
3249 1927 Pls
3289 1911 Pls
3330 1892 Pls
3370 1876 Pls
3411 1860 Pls
3451 1835 Pls
3492 1808 Pls
3533 1782 Pls
3573 1751 Pls
3614 1722 Pls
3654 1689 Pls
3695 1660 Pls
3735 1633 Pls
3776 1607 Pls
3817 1582 Pls
3857 1558 Pls
3898 1537 Pls
3938 1519 Pls
3979 1502 Pls
4019 1492 Pls
4060 1475 Pls
4101 1463 Pls
4141 1446 Pls
4182 1428 Pls
4222 1413 Pls
4263 1395 Pls
4303 1381 Pls
4344 1368 Pls
4385 1354 Pls
4425 1343 Pls
4466 1335 Pls
4506 1328 Pls
4547 1319 Pls
4587 1310 Pls
4628 1299 Pls
4669 1286 Pls
4709 1272 Pls
4750 1259 Pls
4790 1242 Pls
4831 1229 Pls
4871 1215 Pls
4912 1208 Pls
4953 1199 Pls
4993 1192 Pls
5034 1188 Pls
5074 1177 Pls
5115 1171 Pls
5155 1169 Pls
5196 1156 Pls
5237 1148 Pls
5277 1143 Pls
5318 1134 Pls
5358 1124 Pls
5399 1117 Pls
5439 1112 Pls
5480 1106 Pls
5521 1095 Pls
5561 1087 Pls
5602 1075 Pls
5642 1065 Pls
5683 1053 Pls
5723 1044 Pls
5764 1034 Pls
5805 1036 Pls
6388 4277 Pls
1.000 UL
LT1
1.00 0.00 0.00 C LTb
5997 4077 M
[ [(Helvetica) 200.0 0.0 true true 0 (Pre clamp mean value)]
] -66.7 MRshow
LT1
1.00 0.00 0.00 C 6117 4077 M
543 0 V
1220 1948 M
53 0 V
54 0 V
53 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
2.000 UP
stroke
LT2
0.00 0.00 1.00 C LTb
5997 3877 M
[ [(Helvetica) 200.0 0.0 true true 0 (Post Clamp)]
] -66.7 MRshow
LT2
0.00 0.00 1.00 C 1220 933 Crs
1261 944 Crs
1301 967 Crs
1342 1052 Crs
1382 1194 Crs
1423 1420 Crs
1463 1714 Crs
1504 2068 Crs
1545 2455 Crs
1585 2847 Crs
1626 3222 Crs
1666 3542 Crs
1707 3793 Crs
1747 3973 Crs
1788 4082 Crs
1829 4148 Crs
1869 4162 Crs
1910 4147 Crs
1950 4119 Crs
1991 4086 Crs
2031 4064 Crs
2072 4041 Crs
2113 4021 Crs
2153 3999 Crs
2194 3983 Crs
2234 3967 Crs
2275 3946 Crs
2315 3927 Crs
2356 3906 Crs
2397 3883 Crs
2437 3849 Crs
2478 3809 Crs
2518 3760 Crs
2559 3697 Crs
2599 3596 Crs
2640 3467 Crs
2681 3322 Crs
2721 3181 Crs
2762 3015 Crs
2802 2832 Crs
2843 2646 Crs
2883 2477 Crs
2924 2330 Crs
2965 2222 Crs
3005 2184 Crs
3046 2127 Crs
3086 2115 Crs
3127 2114 Crs
3167 2108 Crs
3208 2103 Crs
3249 2098 Crs
3289 2094 Crs
3330 2080 Crs
3370 2061 Crs
3411 2041 Crs
3451 2024 Crs
3492 2000 Crs
3533 1978 Crs
3573 1953 Crs
3614 1926 Crs
3654 1898 Crs
3695 1866 Crs
3735 1832 Crs
3776 1805 Crs
3817 1768 Crs
3857 1738 Crs
3898 1703 Crs
3938 1681 Crs
3979 1657 Crs
4019 1630 Crs
4060 1607 Crs
4101 1586 Crs
4141 1566 Crs
4182 1546 Crs
4222 1527 Crs
4263 1509 Crs
4303 1491 Crs
4344 1477 Crs
4385 1462 Crs
4425 1449 Crs
4466 1429 Crs
4506 1417 Crs
4547 1398 Crs
4587 1386 Crs
4628 1371 Crs
4669 1358 Crs
4709 1342 Crs
4750 1329 Crs
4790 1315 Crs
4831 1303 Crs
4871 1288 Crs
4912 1277 Crs
4953 1265 Crs
4993 1253 Crs
5034 1241 Crs
5074 1229 Crs
5115 1215 Crs
5155 1201 Crs
5196 1189 Crs
5237 1178 Crs
5277 1165 Crs
5318 1155 Crs
5358 1141 Crs
5399 1130 Crs
5439 1120 Crs
5480 1112 Crs
5521 1100 Crs
5561 1094 Crs
5602 1086 Crs
5642 1080 Crs
5683 1069 Crs
5723 1066 Crs
5764 1058 Crs
5805 1053 Crs
5845 1049 Crs
5886 1049 Crs
5926 1041 Crs
5967 1039 Crs
6007 1033 Crs
6048 1032 Crs
6089 1023 Crs
6129 1016 Crs
6170 1006 Crs
6210 994 Crs
6251 985 Crs
6291 973 Crs
6332 963 Crs
6373 954 Crs
6413 940 Crs
6454 936 Crs
6494 931 Crs
6388 3877 Crs
1.000 UL
LT3
0.00 0.00 1.00 C LTb
5997 3677 M
[ [(Helvetica) 200.0 0.0 true true 0 (Post clamp mean value)]
] -66.7 MRshow
LT3
0.00 0.00 1.00 C 6117 3677 M
543 0 V
1220 2008 M
53 0 V
54 0 V
53 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
stroke
LTb
1220 4440 N
0 -3800 V
5680 0 V
0 3800 V
-5680 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
