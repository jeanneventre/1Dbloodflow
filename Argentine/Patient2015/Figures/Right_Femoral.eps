%!PS-Adobe-2.0 EPSF-2.0
%%Title: Right_Femoral.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Wed Dec  6 09:45:56 2017
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (Right_Femoral.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (Jeanne Ventre)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Dec  6 09:45:56 2017)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
1.000 UL
LTb
1220 640 M
63 0 V
5617 0 R
-63 0 V
stroke
1100 640 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 50)]
] -66.7 MRshow
1.000 UL
LTb
1220 1020 M
63 0 V
5617 0 R
-63 0 V
stroke
1100 1020 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 60)]
] -66.7 MRshow
1.000 UL
LTb
1220 1400 M
63 0 V
5617 0 R
-63 0 V
stroke
1100 1400 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 70)]
] -66.7 MRshow
1.000 UL
LTb
1220 1780 M
63 0 V
5617 0 R
-63 0 V
stroke
1100 1780 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 80)]
] -66.7 MRshow
1.000 UL
LTb
1220 2160 M
63 0 V
5617 0 R
-63 0 V
stroke
1100 2160 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 90)]
] -66.7 MRshow
1.000 UL
LTb
1220 2540 M
63 0 V
5617 0 R
-63 0 V
stroke
1100 2540 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 100)]
] -66.7 MRshow
1.000 UL
LTb
1220 2920 M
63 0 V
5617 0 R
-63 0 V
stroke
1100 2920 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 110)]
] -66.7 MRshow
1.000 UL
LTb
1220 3300 M
63 0 V
5617 0 R
-63 0 V
stroke
1100 3300 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 120)]
] -66.7 MRshow
1.000 UL
LTb
1220 3680 M
63 0 V
5617 0 R
-63 0 V
stroke
1100 3680 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 130)]
] -66.7 MRshow
1.000 UL
LTb
1220 4060 M
63 0 V
5617 0 R
-63 0 V
stroke
1100 4060 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 140)]
] -66.7 MRshow
1.000 UL
LTb
1220 4440 M
63 0 V
5617 0 R
-63 0 V
stroke
1100 4440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 150)]
] -66.7 MRshow
1.000 UL
LTb
1220 640 M
0 63 V
0 3737 R
0 -63 V
stroke
1220 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MCshow
1.000 UL
LTb
2167 640 M
0 63 V
0 3737 R
0 -63 V
stroke
2167 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.2)]
] -66.7 MCshow
1.000 UL
LTb
3113 640 M
0 63 V
0 3737 R
0 -63 V
stroke
3113 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.4)]
] -66.7 MCshow
1.000 UL
LTb
4060 640 M
0 63 V
0 3737 R
0 -63 V
stroke
4060 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.6)]
] -66.7 MCshow
1.000 UL
LTb
5007 640 M
0 63 V
0 3737 R
0 -63 V
stroke
5007 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.8)]
] -66.7 MCshow
1.000 UL
LTb
5953 640 M
0 63 V
0 3737 R
0 -63 V
stroke
5953 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 1)]
] -66.7 MCshow
1.000 UL
LTb
6900 640 M
0 63 V
0 3737 R
0 -63 V
stroke
6900 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 1.2)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
1220 4440 N
0 -3800 V
5680 0 V
0 3800 V
-5680 0 V
Z stroke
LCb setrgbcolor
400 2540 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true 0 (Pressure)]
] -66.7 MCshow
grestore
LTb
LCb setrgbcolor
4060 140 M
[ [(Helvetica) 200.0 0.0 true true 0 (time)]
] -66.7 MCshow
LTb
4060 4740 M
[ [(Helvetica) 200.0 0.0 true true 0 (Mean pressure over a cycle for right-femoral clamps)]
] -66.7 MCshow
1.000 UP
1.000 UL
LTb
2.000 UP
1.000 UL
LT0
LTb
5997 4277 M
[ [(Helvetica) 200.0 0.0 true true 0 (Patient 16)]
] -66.7 MRshow
LT0
1220 944 Pls
1267 947 Pls
1315 973 Pls
1362 1033 Pls
1409 1115 Pls
1457 1229 Pls
1504 1363 Pls
1551 1511 Pls
1599 1659 Pls
1646 1804 Pls
1693 1943 Pls
1741 2080 Pls
1788 2210 Pls
1835 2334 Pls
1883 2451 Pls
1930 2557 Pls
1977 2656 Pls
2025 2744 Pls
2072 2824 Pls
2119 2885 Pls
2167 2935 Pls
2214 2968 Pls
2261 2988 Pls
2309 2993 Pls
2356 2987 Pls
2403 2971 Pls
2451 2947 Pls
2498 2915 Pls
2545 2876 Pls
2593 2835 Pls
2640 2782 Pls
2687 2730 Pls
2735 2663 Pls
2782 2586 Pls
2829 2500 Pls
2877 2412 Pls
2924 2324 Pls
2971 2244 Pls
3019 2165 Pls
3066 2099 Pls
3113 2034 Pls
3161 1974 Pls
3208 1919 Pls
3255 1866 Pls
3303 1820 Pls
3350 1778 Pls
3397 1736 Pls
3445 1703 Pls
3492 1667 Pls
3539 1642 Pls
3587 1614 Pls
3634 1593 Pls
3681 1570 Pls
3729 1552 Pls
3776 1532 Pls
3823 1516 Pls
3871 1500 Pls
3918 1487 Pls
3965 1473 Pls
4013 1458 Pls
4060 1443 Pls
4107 1428 Pls
4155 1414 Pls
4202 1398 Pls
4249 1384 Pls
4297 1369 Pls
4344 1353 Pls
4391 1338 Pls
4439 1321 Pls
4486 1307 Pls
4533 1292 Pls
4581 1278 Pls
4628 1263 Pls
4675 1249 Pls
4723 1234 Pls
4770 1221 Pls
4817 1206 Pls
4865 1191 Pls
4912 1175 Pls
4959 1163 Pls
5007 1147 Pls
5054 1136 Pls
5101 1121 Pls
5149 1109 Pls
5196 1096 Pls
5243 1087 Pls
5291 1074 Pls
5338 1062 Pls
5385 1050 Pls
5433 1040 Pls
5480 1034 Pls
5527 1024 Pls
5575 1019 Pls
5622 1011 Pls
5669 1003 Pls
5717 997 Pls
5764 989 Pls
5811 987 Pls
5859 976 Pls
5906 969 Pls
5953 958 Pls
6001 949 Pls
6048 1164 Pls
6095 1154 Pls
6143 1151 Pls
6190 946 Pls
6237 939 Pls
6285 947 Pls
6332 947 Pls
6379 1599 Pls
6388 4277 Pls
2.000 UP
1.000 UL
LT1
LTb
5997 4077 M
[ [(Helvetica) 200.0 0.0 true true 0 (Patient 11)]
] -66.7 MRshow
LT1
1220 2019 Pls
1267 2040 Pls
1315 2111 Pls
1362 2239 Pls
1409 2433 Pls
1457 2676 Pls
1504 2958 Pls
1551 3246 Pls
1599 3514 Pls
1646 3739 Pls
1693 3918 Pls
1741 4058 Pls
1788 4174 Pls
1835 4267 Pls
1883 4335 Pls
1930 4386 Pls
1977 4414 Pls
2025 4418 Pls
2072 4399 Pls
2119 4362 Pls
2167 4315 Pls
2214 4262 Pls
2261 4205 Pls
2309 4142 Pls
2356 4080 Pls
2403 4019 Pls
2451 3954 Pls
2498 3884 Pls
2545 3801 Pls
2593 3705 Pls
2640 3586 Pls
2687 3457 Pls
2735 3314 Pls
2782 3168 Pls
2829 3030 Pls
2877 2922 Pls
2924 2843 Pls
2971 2791 Pls
3019 2758 Pls
3066 2733 Pls
3113 2707 Pls
3161 2679 Pls
3208 2652 Pls
3255 2623 Pls
3303 2595 Pls
3350 2573 Pls
3397 2546 Pls
3445 2525 Pls
3492 2501 Pls
3539 2477 Pls
3587 2451 Pls
3634 2423 Pls
3681 2393 Pls
3729 2365 Pls
3776 2337 Pls
3823 2314 Pls
3871 2288 Pls
3918 2266 Pls
3965 2241 Pls
4013 2219 Pls
4060 2198 Pls
4107 2176 Pls
4155 2153 Pls
4202 2127 Pls
4249 2099 Pls
4297 2073 Pls
4344 2047 Pls
4391 2026 Pls
4439 3661 Pls
4486 3636 Pls
4533 1476 Pls
6388 4077 Pls
2.000 UP
1.000 UL
LT2
LTb
5997 3877 M
[ [(Helvetica) 200.0 0.0 true true 0 (Patient 17)]
] -66.7 MRshow
LT2
1220 1698 Pls
1267 1701 Pls
1315 1713 Pls
1362 1744 Pls
1409 1783 Pls
1457 1843 Pls
1504 1926 Pls
1551 2028 Pls
1599 2138 Pls
1646 2261 Pls
1693 2381 Pls
1741 2504 Pls
1788 2613 Pls
1835 2716 Pls
1883 2802 Pls
1930 2878 Pls
1977 2941 Pls
2025 2998 Pls
2072 3037 Pls
2119 3070 Pls
2167 3096 Pls
2214 3114 Pls
2261 3133 Pls
2309 3147 Pls
2356 3157 Pls
2403 3158 Pls
2451 3155 Pls
2498 3142 Pls
2545 3125 Pls
2593 3101 Pls
2640 3071 Pls
2687 3035 Pls
2735 2995 Pls
2782 2947 Pls
2829 2893 Pls
2877 2837 Pls
2924 2780 Pls
2971 2724 Pls
3019 2669 Pls
3066 2622 Pls
3113 2573 Pls
3161 2534 Pls
3208 2496 Pls
3255 2467 Pls
3303 2434 Pls
3350 2409 Pls
3397 2381 Pls
3445 2361 Pls
3492 2339 Pls
3539 2324 Pls
3587 2301 Pls
3634 2285 Pls
3681 2266 Pls
3729 2250 Pls
3776 2231 Pls
3823 2217 Pls
3871 2200 Pls
3918 2189 Pls
3965 2173 Pls
4013 2158 Pls
4060 2148 Pls
4107 2135 Pls
4155 2121 Pls
4202 2109 Pls
4249 2097 Pls
4297 2084 Pls
4344 2071 Pls
4391 2056 Pls
4439 2044 Pls
4486 2031 Pls
4533 2017 Pls
4581 2006 Pls
4628 1993 Pls
4675 1981 Pls
4723 1967 Pls
4770 1953 Pls
4817 1940 Pls
4865 1927 Pls
4912 1913 Pls
4959 1901 Pls
5007 1888 Pls
5054 1877 Pls
5101 1862 Pls
5149 1852 Pls
5196 1839 Pls
5243 1829 Pls
5291 1820 Pls
5338 1810 Pls
5385 1800 Pls
5433 1793 Pls
5480 1784 Pls
5527 1772 Pls
5575 1764 Pls
5622 1755 Pls
5669 1744 Pls
5717 1736 Pls
5764 1727 Pls
5811 1725 Pls
5859 1718 Pls
5906 1713 Pls
5953 1708 Pls
6001 1706 Pls
6048 1702 Pls
6095 1991 Pls
6388 3877 Pls
1.000 UL
LTb
1220 4440 N
0 -3800 V
5680 0 V
0 3800 V
-5680 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
