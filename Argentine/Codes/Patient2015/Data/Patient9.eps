%!PS-Adobe-2.0 EPSF-2.0
%%Title: Patient9.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Wed Feb  7 15:51:57 2018
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (Patient9.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (Jeanne Ventre)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Feb  7 15:51:57 2018)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
1.000 UL
LTb
1220 640 M
63 0 V
5617 0 R
-63 0 V
stroke
1100 640 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 50)]
] -66.7 MRshow
1.000 UL
LTb
1220 1183 M
63 0 V
5617 0 R
-63 0 V
stroke
1100 1183 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 60)]
] -66.7 MRshow
1.000 UL
LTb
1220 1726 M
63 0 V
5617 0 R
-63 0 V
stroke
1100 1726 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 70)]
] -66.7 MRshow
1.000 UL
LTb
1220 2269 M
63 0 V
5617 0 R
-63 0 V
stroke
1100 2269 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 80)]
] -66.7 MRshow
1.000 UL
LTb
1220 2811 M
63 0 V
5617 0 R
-63 0 V
stroke
1100 2811 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 90)]
] -66.7 MRshow
1.000 UL
LTb
1220 3354 M
63 0 V
5617 0 R
-63 0 V
stroke
1100 3354 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 100)]
] -66.7 MRshow
1.000 UL
LTb
1220 3897 M
63 0 V
5617 0 R
-63 0 V
stroke
1100 3897 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 110)]
] -66.7 MRshow
1.000 UL
LTb
1220 4440 M
63 0 V
5617 0 R
-63 0 V
stroke
1100 4440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 120)]
] -66.7 MRshow
1.000 UL
LTb
1220 640 M
0 63 V
0 3737 R
0 -63 V
stroke
1220 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MCshow
1.000 UL
LTb
2167 640 M
0 63 V
0 3737 R
0 -63 V
stroke
2167 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.2)]
] -66.7 MCshow
1.000 UL
LTb
3113 640 M
0 63 V
0 3737 R
0 -63 V
stroke
3113 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.4)]
] -66.7 MCshow
1.000 UL
LTb
4060 640 M
0 63 V
0 3737 R
0 -63 V
stroke
4060 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.6)]
] -66.7 MCshow
1.000 UL
LTb
5007 640 M
0 63 V
0 3737 R
0 -63 V
stroke
5007 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.8)]
] -66.7 MCshow
1.000 UL
LTb
5953 640 M
0 63 V
0 3737 R
0 -63 V
stroke
5953 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 1)]
] -66.7 MCshow
1.000 UL
LTb
6900 640 M
0 63 V
0 3737 R
0 -63 V
stroke
6900 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 1.2)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
1220 4440 N
0 -3800 V
5680 0 V
0 3800 V
-5680 0 V
Z stroke
LCb setrgbcolor
400 2540 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true 0 (Pressure \(mmHg\))]
] -66.7 MCshow
grestore
LTb
LCb setrgbcolor
4060 140 M
[ [(Helvetica) 200.0 0.0 true true 0 (Time \(s\))]
] -66.7 MCshow
LTb
4060 4740 M
[ [(Helvetica) 200.0 0.0 true true 0 (Mean beat pressure over a cycle for Patient 9)]
] -66.7 MCshow
1.000 UP
1.000 UL
LTb
2.000 UP
1.000 UL
LT0
1.00 0.00 0.00 C LTb
5997 4277 M
[ [(Helvetica) 200.0 0.0 true true 0 (Pre Clamp )]
] -66.7 MRshow
LT0
1.00 0.00 0.00 C 1220 938 Pls
1267 946 Pls
1315 980 Pls
1362 1048 Pls
1409 1141 Pls
1457 1279 Pls
1504 1444 Pls
1551 1619 Pls
1599 1798 Pls
1646 1968 Pls
1693 2126 Pls
1741 2277 Pls
1788 2414 Pls
1835 2542 Pls
1883 2660 Pls
1930 2758 Pls
1977 2840 Pls
2025 2920 Pls
2072 2975 Pls
2119 3015 Pls
2167 3041 Pls
2214 3055 Pls
2261 3050 Pls
2309 3036 Pls
2356 3023 Pls
2403 3004 Pls
2451 2978 Pls
2498 2942 Pls
2545 2901 Pls
2593 2849 Pls
2640 2788 Pls
2687 2713 Pls
2735 2621 Pls
2782 2522 Pls
2829 2419 Pls
2877 2322 Pls
2924 2228 Pls
2971 2145 Pls
3019 2073 Pls
3066 2012 Pls
3113 1955 Pls
3161 1911 Pls
3208 1867 Pls
3255 1829 Pls
3303 1790 Pls
3350 1758 Pls
3397 1727 Pls
3445 1691 Pls
3492 1670 Pls
3539 1650 Pls
3587 1626 Pls
3634 1606 Pls
3681 1585 Pls
3729 1571 Pls
3776 1555 Pls
3823 1535 Pls
3871 1513 Pls
3918 1496 Pls
3965 1477 Pls
4013 1459 Pls
4060 1436 Pls
4107 1415 Pls
4155 1392 Pls
4202 1367 Pls
4249 1344 Pls
4297 1325 Pls
4344 1306 Pls
4391 1295 Pls
4439 1278 Pls
4486 1266 Pls
4533 1249 Pls
4581 1238 Pls
4628 1220 Pls
4675 1202 Pls
4723 1184 Pls
4770 1168 Pls
4817 1151 Pls
4865 1134 Pls
4912 1118 Pls
4959 1108 Pls
5007 1099 Pls
5054 1093 Pls
5101 1083 Pls
5149 1078 Pls
5196 1072 Pls
5243 1059 Pls
5291 1044 Pls
5338 1029 Pls
5385 1020 Pls
5433 1007 Pls
5480 994 Pls
5527 979 Pls
5575 970 Pls
5622 959 Pls
5669 943 Pls
5717 933 Pls
5764 937 Pls
6388 4277 Pls
1.000 UL
LT1
1.00 0.00 0.00 C LTb
5997 4077 M
[ [(Helvetica) 200.0 0.0 true true 0 (Pre clamp mean value)]
] -66.7 MRshow
LT1
1.00 0.00 0.00 C 6117 4077 M
543 0 V
1220 1744 M
49 0 V
49 0 V
48 0 V
49 0 V
49 0 V
49 0 V
48 0 V
49 0 V
49 0 V
49 0 V
48 0 V
49 0 V
49 0 V
49 0 V
49 0 V
48 0 V
49 0 V
49 0 V
49 0 V
48 0 V
49 0 V
49 0 V
49 0 V
48 0 V
49 0 V
49 0 V
49 0 V
48 0 V
49 0 V
49 0 V
49 0 V
49 0 V
48 0 V
49 0 V
49 0 V
49 0 V
48 0 V
49 0 V
49 0 V
49 0 V
48 0 V
49 0 V
49 0 V
49 0 V
49 0 V
48 0 V
49 0 V
49 0 V
49 0 V
48 0 V
49 0 V
49 0 V
49 0 V
48 0 V
49 0 V
49 0 V
49 0 V
49 0 V
48 0 V
49 0 V
49 0 V
49 0 V
48 0 V
49 0 V
49 0 V
49 0 V
48 0 V
49 0 V
49 0 V
49 0 V
49 0 V
48 0 V
49 0 V
49 0 V
49 0 V
48 0 V
49 0 V
49 0 V
49 0 V
48 0 V
49 0 V
49 0 V
49 0 V
48 0 V
49 0 V
49 0 V
49 0 V
49 0 V
48 0 V
49 0 V
49 0 V
49 0 V
48 0 V
49 0 V
49 0 V
49 0 V
48 0 V
49 0 V
49 0 V
2.000 UP
stroke
LT2
0.00 0.00 1.00 C LTb
5997 3877 M
[ [(Helvetica) 200.0 0.0 true true 0 (Post Clamp)]
] -66.7 MRshow
LT2
0.00 0.00 1.00 C 1220 1232 Crs
1267 1244 Crs
1315 1279 Crs
1362 1346 Crs
1409 1440 Crs
1457 1563 Crs
1504 1724 Crs
1551 1910 Crs
1599 2102 Crs
1646 2303 Crs
1693 2503 Crs
1741 2702 Crs
1788 2884 Crs
1835 3052 Crs
1883 3212 Crs
1930 3355 Crs
1977 3481 Crs
2025 3586 Crs
2072 3678 Crs
2119 3771 Crs
2167 3840 Crs
2214 3877 Crs
2261 3894 Crs
2309 3900 Crs
2356 3897 Crs
2403 3882 Crs
2451 3869 Crs
2498 3846 Crs
2545 3820 Crs
2593 3787 Crs
2640 3736 Crs
2687 3659 Crs
2735 3587 Crs
2782 3506 Crs
2829 3417 Crs
2877 3290 Crs
2924 3155 Crs
2971 3027 Crs
3019 2910 Crs
3066 2791 Crs
3113 2685 Crs
3161 2596 Crs
3208 2528 Crs
3255 2460 Crs
3303 2405 Crs
3350 2353 Crs
3397 2317 Crs
3445 2280 Crs
3492 2248 Crs
3539 2218 Crs
3587 2189 Crs
3634 2159 Crs
3681 2134 Crs
3729 2103 Crs
3776 2083 Crs
3823 2056 Crs
3871 2031 Crs
3918 2007 Crs
3965 1988 Crs
4013 1960 Crs
4060 1937 Crs
4107 1910 Crs
4155 1884 Crs
4202 1855 Crs
4249 1829 Crs
4297 1801 Crs
4344 1776 Crs
4391 1749 Crs
4439 1724 Crs
4486 1701 Crs
4533 1677 Crs
4581 1655 Crs
4628 1629 Crs
4675 1612 Crs
4723 1590 Crs
4770 1569 Crs
4817 1551 Crs
4865 1531 Crs
4912 1511 Crs
4959 1492 Crs
5007 1479 Crs
5054 1466 Crs
5101 1451 Crs
5149 1436 Crs
5196 1423 Crs
5243 1411 Crs
5291 1397 Crs
5338 1392 Crs
5385 1375 Crs
5433 1371 Crs
5480 1360 Crs
5527 1348 Crs
5575 1340 Crs
5622 1327 Crs
5669 1309 Crs
5717 1295 Crs
5764 1282 Crs
5811 1268 Crs
5859 1253 Crs
5906 1246 Crs
5953 1240 Crs
6001 1245 Crs
6048 1229 Crs
6388 3877 Crs
1.000 UL
LT3
0.00 0.00 1.00 C LTb
5997 3677 M
[ [(Helvetica) 200.0 0.0 true true 0 (Post clamp mean value)]
] -66.7 MRshow
LT3
0.00 0.00 1.00 C 6117 3677 M
543 0 V
1220 2231 M
49 0 V
49 0 V
48 0 V
49 0 V
49 0 V
49 0 V
48 0 V
49 0 V
49 0 V
49 0 V
48 0 V
49 0 V
49 0 V
49 0 V
49 0 V
48 0 V
49 0 V
49 0 V
49 0 V
48 0 V
49 0 V
49 0 V
49 0 V
48 0 V
49 0 V
49 0 V
49 0 V
48 0 V
49 0 V
49 0 V
49 0 V
49 0 V
48 0 V
49 0 V
49 0 V
49 0 V
48 0 V
49 0 V
49 0 V
49 0 V
48 0 V
49 0 V
49 0 V
49 0 V
49 0 V
48 0 V
49 0 V
49 0 V
49 0 V
48 0 V
49 0 V
49 0 V
49 0 V
48 0 V
49 0 V
49 0 V
49 0 V
49 0 V
48 0 V
49 0 V
49 0 V
49 0 V
48 0 V
49 0 V
49 0 V
49 0 V
48 0 V
49 0 V
49 0 V
49 0 V
49 0 V
48 0 V
49 0 V
49 0 V
49 0 V
48 0 V
49 0 V
49 0 V
49 0 V
48 0 V
49 0 V
49 0 V
49 0 V
48 0 V
49 0 V
49 0 V
49 0 V
49 0 V
48 0 V
49 0 V
49 0 V
49 0 V
48 0 V
49 0 V
49 0 V
49 0 V
48 0 V
49 0 V
49 0 V
stroke
LTb
1220 4440 N
0 -3800 V
5680 0 V
0 3800 V
-5680 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
