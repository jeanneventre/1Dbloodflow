import numpy as np
from scipy.optimize import minimize
import matplotlib.pyplot as plt
import math

t = np.array([0.00,
0.01,
0.02,
0.03,
0.04,
0.05,
0.06,
0.07,
0.08,
0.09,
0.10,
0.11,
0.12,
0.13,
0.14,
0.15,
0.16,
0.17,
0.18,
0.19,
0.20,
0.21,
0.22,
0.23,
0.24,
0.25,
0.26,
0.27,
0.28,
0.29,
0.30,
0.31,
0.32,
0.33,
0.34,
0.35,
0.36,
0.37,
0.38,
0.39,
0.40,
0.41,
0.42,
0.43,
0.44,
0.45,
0.46,
0.47,
0.48,
0.49,
0.50,
0.51,
0.52,
0.53,
0.54,
0.55,
0.56,
0.57,])



Q = np.array([64.90,
65.11,
66.11,
67.96,
70.70,
74.74,
79.48,
84.69,
89.68,
94.34,
98.26,
101.64,
104.42,
106.83,
108.81,
110.14,
110.91,
111.09,
110.80,
109.90,
108.72,
107.52,
106.09,
104.51,
102.51,
100.20,
97.44,
94.54,
91.50,
88.64,
86.00,
83.69,
81.63,
79.91,
78.40,
77.17,
76.06,
75.23,
74.44,
73.83,
73.23,
72.63,
72.01,
71.47,
71.01,
70.49,
69.99,
69.52,
69.03,
68.58,
68.12,
67.70,
67.17,
66.70,
66.18,
65.71,
65.25,
64.88])

Qq = np.zeros(len(Q))

for i in range(0,len(Q)):
	Qq[i] = Q[len(Q)-i-1]

# plt.plot(t, Qq)

def diff(x,Q,t):
	s = len(Q)
	guessQ = np.zeros(s)

	guessQ[:] = x[0] + x[1] * np.sin(2 * np.pi/0.57 * t[:] + x[2]) + x[3] * np.sin(4*np.pi/0.57 * t[:] + x[4]) + x[5] * np.sin(6 * np.pi/0.57 *t[:] + x[6]) - x[7] * np.sin(14*np.pi/0.57 * t[:] +x[8])

	return np.sum((Q/0.00075 - guessQ)**2)

x0 = np.array([1.,1., 0.5, 1.,  0.5, 1., 0.5,1.,0.5])

# print(diff(x0,Q,t))

a = minimize(diff, x0, args = (1.085*Q+13,t), method='L-BFGS-B')
xx = a.x
print(xx)

x=xx

s = len(Q)
guessQ = np.zeros(s)

tt= np.linspace(0, 2*0.57, 2*58)
guessQ = x[0] + x[1] * np.sin(2 * np.pi/0.57 * tt + x[2]) + x[3] * np.sin(4*np.pi/0.57 * tt + x[4]) + x[5] * np.sin(6 * np.pi/0.57 *tt + x[6]) - x[7] * np.sin(14*np.pi/0.57 * tt +x[8])



plt.plot(tt, guessQ, 'r')
plt.plot (t, 1.06*(Q+13)/0.00075,'b')
plt.show()

